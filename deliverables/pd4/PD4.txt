You are to pipeline your MIPS processor implementation.  Data forwarding and stalling to avoid hazards is not required for this deliverable (that will be required for PD5).

Download pd4.zip.  It contains one testbench program that I hand-assembled called test.x  There is a matching test.dmp file.  It is designed to execute properly on a pipelined processor without data-forwarding or stalling.  It does this by appropriately spacing dependent instructions.  The expected output is contained in a file called test.out.  The zip file also contains the testbench module in pd4_tb.sv and the register file module in regfile.sv.  The testbench has similar structure to the testbenches for PD2 and PD3: it requires parameters pc_init, sp_init, and ra_init be declared in your mips module and also requires use of the same register file.  The output produced by your design should match the content and timing shown in test.out.  The timing may vary by one or two cycles since reset procedures (setting of PC, SP, and RA) may vary.
